version: '3'
services:
  nginx:
    build:
      context: .
      dockerfile: ./requirements/nginx/Dockerfile
    networks:
      - frontend
    volumes:
      - ./requirements/nginx/conf/server.key:/etc/nginx/ssl/server.key
      - ./requirements/nginx/conf/server.crt:/etc/nginx/ssl/server.crt
      - ./requirements/nginx/conf/default.conf:/etc/nginx/conf.d/default.conf
      - ./requirements/wordpress/data:/var/www/html
    ports:
      - "443:443"
    depends_on:
      - wordpress
    restart: always
    container_name: ${NGINX_CONTAINER_NAME}

  wordpress:
    build:
      context: .
      dockerfile: ./requirements/wordpress/Dockerfile
    #image: wordpress:php7.3-fpm
    networks:
      frontend:
        aliases:
          - frontend-network
      backend:
        aliases:
          - backend-network
    volumes:
      - ./requirements/wordpress/data:/var/www/html
    environment:
      - WORDPRESS_DB_HOST=${WORDPRESS_DB_HOST}
      - WORDPRESS_DB_USER=${WORDPRESS_DB_USER}
      - WORDPRESS_DB_PASSWORD=${WORDPRESS_DB_PASSWORD}
      - WORDPRESS_DB_NAME=${WORDPRESS_DB_NAME}
    depends_on:
      - mariadb
    restart: always
    container_name: ${WORDPRESS_CONTAINER_NAME}

  mariadb:
    build:
      context: .
      dockerfile: ./requirements/mariadb/Dockerfile
    networks:
      - backend
    volumes:
      - /var/lib/mysql
    environment:
      - WORDPRESS_HOST_NAME=${WORDPRESS_CONTAINER_NAME}.${BACKEND_NETWORK_NAME}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    restart: always
    container_name: ${MYSQL_CONTAINER_NAME}

networks:
  frontend:
    name: ${FRONTEND_NETWORK_NAME}
    driver: bridge
  backend:
    name: ${BACKEND_NETWORK_NAME}
    driver: bridge
