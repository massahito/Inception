version: '3'
services:
  nginx:
    build:
      context: .
      dockerfile: ./requirements/nginx/Dockerfile
    networks:
      - frontend
    volumes:
      - ./requirements/nginx/conf/server.key:/etc/nginx/ssl/server.key
      - ./requirements/nginx/conf/server.crt:/etc/nginx/ssl/server.crt
      - ./requirements/nginx/conf/default.conf:/etc/nginx/conf.d/default.conf
      - web_files:/var/www/html
    ports:
      - "443:443"
    depends_on:
      - wordpress
    restart: always
    container_name: ${NGINX_CONTAINER_NAME}
  wordpress:
    build:
      context: .
      dockerfile: ./requirements/wordpress/Dockerfile
    networks:
      frontend:
        aliases:
          - frontend-network
      backend:
        aliases:
          - backend-network
    volumes:
      - web_files:/var/www/html
    environment:
      - USER_ID=${USER_ID}
      - GROUP_ID=${GROUP_ID}
      - WORDPRESS_ADMIN_NAME=${WORDPRESS_ADMIN_NAME}
      - WORDPRESS_ADMIN_PASSWORD=${WORDPRESS_ADMIN_PASSWORD}
      - WORDPRESS_ADMIN_EMAIL=${WORDPRESS_ADMIN_EMAIL}
      - WORDPRESS_TITLE=${WORDPRESS_TITLE}
      - WORDPRESS_URL=${WORDPRESS_URL}
      - WORDPRESS_DB_HOST=${WORDPRESS_DB_HOST}
      - WORDPRESS_DB_USER=${WORDPRESS_DB_USER}
      - WORDPRESS_DB_PASSWORD=${WORDPRESS_DB_PASSWORD}
      - WORDPRESS_DB_NAME=${WORDPRESS_DB_NAME}
    depends_on:
      mariadb:
        condition: service_healthy
    restart: always
    container_name: ${WORDPRESS_CONTAINER_NAME}

  mariadb:
    build:
      context: .
      dockerfile: ./requirements/mariadb/Dockerfile
    networks:
      - backend
    volumes:
      - ./requirements/mariadb/tools/docker-my.cnf:/etc/mysql/docker-my.cnf
      - database:/var/lib/docker-mysql
    environment:
      - USER_ID=${USER_ID}
      - GROUP_ID=${GROUP_ID}
      - WORDPRESS_HOST_NAME=${WORDPRESS_CONTAINER_NAME}.${BACKEND_NETWORK_NAME}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "mariadb"]
      start_period: "1005s"
      interval: "2s"
      timeout: "5s"
      retries: 2
    restart: always
    container_name: ${MYSQL_CONTAINER_NAME}
  dnsmasq:
    image: 4km3/dnsmasq
    environment:
      TZ: "Asia/Tokyo"
    ports:
      - "5553:53/udp"
      - "5553:53/tcp"
    volumes:
      - ./requirements/dnsmasq/dnsmasq.d:/etc/dnsmasq.d
    dns:
      - 8.8.8.8
      - 127.0.0.1
    cap_add:
      - NET_ADMIN
    container_name: mydnsmasq

networks:
  frontend:
    name: ${FRONTEND_NETWORK_NAME}
    driver: bridge
  backend:
    name: ${BACKEND_NETWORK_NAME}
    driver: bridge

volumes:
  database:
    driver_opts:
      type: none
      device: ${HOME}/data/mysql
      o: bind
  web_files:
    driver_opts:
      type: none
      device: ${HOME}/data/wordpress
      o: bind
